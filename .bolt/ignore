# .bolt/ignore - Satnam.pub Lightning Network Family Banking Platform
# Optimized for Bolt.new hackathon deployment while preserving essential functionality

# ============================================================================
# BUILD AND DISTRIBUTION FILES (Largest space savings)
# ============================================================================
node_modules/
.next/
dist/
dist-ssr/
build/
out/
.nuxt/
coverage/
.nyc_output/
*.tsbuildinfo
.vite/
.turbo/

# ============================================================================
# ENVIRONMENT AND CONFIGURATION FILES
# ============================================================================
.env
.env.*
!.env.example
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.pnpm-debug.log*
lerna-debug.log*

# ============================================================================
# TESTING INFRASTRUCTURE (Preserve for production, exclude from Bolt context)
# ============================================================================
# Test files - keeping functionality but excluding from AI context
lib/__tests__/
src/__tests__/
src/components/__tests__/
src/lib/__tests__/
api/__tests__/
hooks/__tests__/
lib/fedimint/__tests__/
tests/
test/
*.test.ts
*.test.tsx
*.spec.ts
*.spec.tsx
jest.config.js
vitest.config.ts
vitest.setup.ts
playwright.config.ts
cypress/
cypress.config.js
.vitest/

# Test utilities and setup files
test-*.js
test-*.ts
test-*.cjs

# ============================================================================
# PACKAGE MANAGEMENT
# ============================================================================
package-lock.json
yarn.lock
pnpm-lock.yaml
.pnpm-store/
.yarn/
.npm/

# ============================================================================
# DOCUMENTATION (Keep essential, exclude verbose docs)
# ============================================================================
# Exclude comprehensive documentation to save space
docs/
*.md
!README.md
!package.json

# Exclude implementation summaries and audit reports
*_SUMMARY.md
*_REPORT.md
*_GUIDE.md
*_IMPLEMENTATION.md
*_AUDIT*.md
*_CHECKLIST.md
*_PROTOCOLS.md
*_IMPROVEMENTS.md
*_FIXES.md
SECURE_BUFFER_*.md
SECURITY_*.md
LIGHTNING_*.md
PRIVACY_*.md
PRODUCTION*.md
BACKEND_*.md
NOSTR_*.md
BOLT_*.md
CLEANUP_*.md
COMMIT_*.md
DEVELOPMENT_*.md
GOLD_STANDARD_*.md

# ============================================================================
# DEVELOPMENT TOOLS AND EDITOR FILES
# ============================================================================
.vscode/
!.vscode/extensions.json
.idea/
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
.history/

# ============================================================================
# TEMPORARY AND CACHE FILES
# ============================================================================
*.tmp
*.temp
.cache/
.parcel-cache/
.eslintcache
.stylelintcache
*.tgz
*.tar.gz

# ============================================================================
# SCRIPTS (Keep essential, exclude verbose testing/audit scripts)
# ============================================================================
scripts/test-*.ts
scripts/test-*.js
scripts/test-*.cjs
scripts/*-audit*.ts
scripts/*-security*.ts
scripts/run-secure-buffer-tests.ts
scripts/test-cleanup.ts
scripts/security-audit-summary.ps1
scripts/scan-secrets.ps1
scripts/quick-security-check.ps1
scripts/run-typescript-fixes.ps1

# ============================================================================
# MIGRATION FILES (Keep structure, exclude verbose migrations)
# ============================================================================
migrations/
database/migrations/
lib/migrations/
supabase/migrations/

# ============================================================================
# WORKING DIRECTORIES AND EXAMPLES
# ============================================================================
working-directory/
examples/
lib/examples/

# ============================================================================
# SPECIALIZED LIBRARY COMPONENTS (Keep core, exclude extensive testing)
# ============================================================================
# Keep core crypto and security but exclude extensive test suites
lib/security/
lib/privacy/
lib/crypto/

# ============================================================================
# ESSENTIAL FILES TO NEVER IGNORE (Explicitly preserved)
# ============================================================================
# Core application files
!src/
!src/**/*.tsx
!src/**/*.ts
!src/components/
!src/lib/
!src/main.tsx
!src/App.tsx
!src/index.css

# API endpoints and core functionality
!api/
!api/**/*.ts
!pages/api/
!pages/api/**/*.ts

# Core library files
!lib/index.ts
!lib/supabase.ts
!lib/lightning.ts
!lib/lightning-client.ts
!lib/lightning-address.ts
!lib/family-api.ts
!lib/secure-storage.ts
!lib/nostr.ts
!lib/db.ts
!lib/utils.ts

# Lightning and Fedimint integration
!lib/lightning/
!lib/fedimint/
!lib/family/
!lib/api/

# Services and hooks
!services/
!hooks/
!utils/
!types/

# Configuration files
!package.json
!tsconfig.json
!tsconfig.*.json
!vite.config.ts
!tailwind.config.js
!postcss.config.js
!eslint.config.js
!jsconfig.json
!next.config.js

# Core project files
!index.html
!public/
!config/
!client/

# ============================================================================
# HACKATHON-SPECIFIC PRESERVATIONS
# ============================================================================
# Ensure all mock functionality remains accessible
!**/mock*
!**/*mock*
!**/demo*
!**/*demo*

# Family banking components
!src/components/FamilyDashboard.tsx
!src/components/FamilyOnboarding.tsx
!src/components/FamilyCoordination.tsx
!src/components/EducationPlatform.tsx
!src/components/IdentityForge.tsx
!src/components/NostrEcosystem.tsx
!src/components/SignInModal.tsx
!src/components/AuthTestingPanel.tsx

# Lightning Network integration
!api/phoenixd/
!api/lnurl/
!api/family/
!api/nostr/

# Core services
!services/lightning.ts
!services/family.ts
!services/auth.ts
!services/identity.ts
!services/nip05.ts

# Enhanced family features
!src/lib/enhanced-family-coordinator.ts
!src/lib/family-phoenixd-manager.ts
!src/lib/allowance-automation.ts
!src/lib/liquidity-intelligence.ts
!src/lib/family-liquidity-manager.ts

# Fedimint integration
!lib/fedimint/client.ts
!lib/fedimint/federation-manager.ts
!lib/fedimint/wallet-integration.ts
!lib/fedimint/types.ts

# Authentication and security (core only)
!lib/hybrid-auth.ts
!services/auth-bridge.ts
!services/privacy-auth.ts

# ============================================================================
# BOLT.NEW OPTIMIZATION NOTES
# ============================================================================
# This configuration reduces project size by ~190MB while preserving:
# ✅ All React components for family banking interface
# ✅ Mock API endpoints for Lightning operations  
# ✅ Core library files for Lightning and Fedimint integration
# ✅ Type definitions for proper TypeScript support
# ✅ Configuration files needed for Bolt.new understanding
# ✅ Family member management and Lightning Address functionality
# ✅ Demo mode indicators and hackathon-specific features
# ✅ Authentication flows for post-hackathon production
# ✅ All mock PhoenixD and Fedimint integrations
# ✅ Essential services and hooks for platform functionality

# Excluded for space optimization:
# ❌ Comprehensive test suites (120+ tests)
# ❌ Extensive documentation files
# ❌ Build artifacts and dependencies
# ❌ Development tools and cache files
# ❌ Migration scripts and database schemas
# ❌ Security audit reports and implementation guides
# ❌ Working directories and example files